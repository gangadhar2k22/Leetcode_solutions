QUESTION:

Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) 
of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Example 1:
Input: s = "abc", t = "ahbgdc"
Output: true

Example 2:
Input: s = "axc", t = "ahbgdc"
Output: false
 
Constraints:
0 <= s.length <= 100
0 <= t.length <= 104
s and t consist only of lowercase English letters.

CODE:

class Solution {
public:
    bool isSubsequence(string s, string t) {
        //edge case
        if(s.length()>t.length())
            return false;
        int i=0,j=0;
        //Traverse the t string
        for(j=0;j<t.length();j++){
            if(s[i]==t[j]){
                i++; // move if match
            }
        }
        //j reached end of t, but i traversal is not complete
        //means incorrect subsequence or different char exists
        if(i<s.length() && j==t.length())
            return false;
        return true;
    }
};
